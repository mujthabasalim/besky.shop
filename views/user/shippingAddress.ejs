<%- include('../partials/header') %>



<style>

  .address-type {
    font-size: 12px;
    background: #eee;
    border-radius: 2px;
  }

  /* Hide original radio button */
  .checkbox-style input[type="radio"] {
  opacity: 0;
  position: absolute;
}

.checkbox-style label {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  position: relative;
  padding-left: 30px;
}

.checkbox-style label::before {
  content: "";
  width: 16px;
  height: 16px;
  border: 1px solid #000;
  border-radius: 3px;
  background-color: #fff;
  position: absolute;
  left: 9px;
  bottom: -3px;
}

.checkbox-style input[type="radio"]:checked + label::before {
  background-color: #000;
}

.checkbox-style input[type="radio"]:checked + label::after {
  content: "\f00c";
  font-family: 'Font Awesome 5 Free';
  font-weight: 900;
  position: absolute;
  top: -13px;
  left: 11px;
  font-size: 12px;
  color: white;
}

  .address-type {
    margin-right: 20px;
  }
</style>
<% if (cartItems.length > 0) { %>
<div class="container mt-5">
  <h3 class="mb-4">Shipping Address</h3>
  <div class="row">
    <!-- Product List -->
    <div class="col-lg-8 col-md-12">
      <div class="stepper d-flex justify-content-between align-items-center mb-3">
        <!-- Step 1: Address -->
        <div class="step completed text-center d-flex flex-column justify-content-center align-items-center">
          <div class="icon">
            <i class="fas fa-home"></i>
          </div>
          <p class="m-0">Address</p>
        </div>
        <!-- Step 2: Payment Method -->
        <div class="step text-center d-flex flex-column justify-content-center align-items-center">
          <div class="icon">
            <i class="fas fa-credit-card"></i>
          </div>
          <p class="m-0">Payment Method</p>
        </div>
        <!-- Step 3: Review -->
        <div class="step upcoming text-center d-flex flex-column justify-content-center align-items-center">
          <div class="icon">
            <i class="fas fa-file-alt"></i>
          </div>
          <p class="m-0">Review</p>
        </div>
      </div>

      <strong>Select delivery address</strong>
      <p>Is the address you'd like to use displayed below? If so, click the corresponding "Deliver to this address"
        button. Or you can enter a new delivery address.</p>

        <div class="row">
         <% user.addresses.forEach((address, index) => { %> 
          <div class="col-md-6 mb-3">
            <div class="profile-card bg-light p-3 rounded">
          <div class="profile-info mb-2">
            <div class="d-flex align-items-center">
              <strong class="text-nowrap"><%= address.fName %> <%= address.lName %></strong>
              <div class="d-flex justify-content-between align-items-center w-100">
                <span class="address-type ms-3 px-1"><%= address.type %></span>
                <div class="checkbox-style">
                  <input type="radio" id="selectedAddress_<%= index %>" name="selectedAddress" <%=address.isDefault ? 'checked' : '' %> value="<%= address._id %>">
                  <label for="selectedAddress_<%= index %>"></label>
                </div>
              </div>
            </div>
            <p class="m-1">
              <%= address.houseName %>, <%= address.area %>, <%= address.city %>, <%= address.postcode %>
            </p>
            <p class="phone m-1"><%= address.contactNo %></p>
          </div>
          <div class="profile-actions d-flex align-items-center justify-content-end gap-3">
            <button class="btn btn-light" style="background-color: #eee;" onclick='openAddressModal("edit", "<%= JSON.stringify(address) %>")'>
              <i class="bx bx-edit"></i> Edit
            </button>
            <form id="deleteAddressForm_<%= address._id %>" action="/protected/delete-address/<%= address._id %>" method="POST">
              <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" onclick="setAddressId('<%= address._id %>')">
                <i class="bx bx-trash"></i> Delete
              </button>
            </form>
          </div>
        </div>
        </div>
        <% }) %>
      </div>
      <button class="btn btn-dark" onclick='openAddressModal("add")'>
        + Add new Address
      </button>
    </div>

    <!-- Summary Section -->
    <div class="col-lg-4 col-md-12">
      <div class="shadow-sm p-3">
        <h5>Summary</h5>
        <hr>
        <div class="d-flex justify-content-between">
          <p class="mb-2">Subtotal</p>
          <p class="mb-2" id="subtotalAmount">&#8377;<%= cartSummary.subtotal.toFixed(2) %></p>
        </div>
        <div class="mb-3">
          <label for="discount-code" class="form-label">Enter Discount code</label>
          <div class="input-group">
            <input type="text" class="form-control" id="discount-code">
            <button class="btn btn-dark" type="button" id="applyDiscount"></button>
          </div>
        </div>
        <p>
          <a class="text-success text-decoration-none" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
           See available Coupons
          </a>
        </p>
        <div class="collapse mb-3" id="collapseExample">
          <div class="d-flex align-items-center justify-content-lg-center flex-wrap gap-3">
            <% if (coupons. length > 0) { %>
              <% coupons.forEach(coupon => { %>
                <div class="card d-flex p-2 align-items-center" style="width: max-content;">
                  <p class="m-0 text-success fw-bold" style="font-size: 12px;"><%= coupon.couponCode %></p>
                  <p class="m-0" style="font-size: 12px;">
                  Min purchase: <strong>&#8377;<%= coupon.minPurchase %></strong></p>
                </div>
              <% }) %>
            <% } else { %> 
            <% } %>
          </div>
        </div>
        <div class="d-flex justify-content-between">
          <p class="mb-2">Discount</p>
          <p class="mb-2" id="discount">&#8377;<%= cartSummary.couponDiscount.toFixed(2) %></p>
        </div>
        <div class="d-flex justify-content-between">
          <p class="mb-2">Delivery Charge</p>
          <p class="mb-2" id="deliveryCharge">
            <%- cartSummary.deliveryCharge === 0 ? '<del>\u20B940.00</del> Free' : '\u20B9' + cartSummary.deliveryCharge.toFixed(2) %>
          </p>
        </div>
        <hr>
        <div class="d-flex justify-content-between">
          <p class="fw-bold">Grand Total</p>
          <p class="fw-bold" id="grandTotal">&#8377;<%= cartSummary.grandTotal.toFixed(2) %></p>
        </div>
        <button class="btn btn-dark w-100 mt-3" id="checkoutBtn">Proceed to Payments</button>
      </div>
    </div>
  </div>
</div>
<% } else { %>
  <a href="/protected/cart"></a>
<% } %>




<!-- Add address modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <p class="modal-title" id="addressModalLabel"></p>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addressForm" action="/protected/add-new-address" method="POST">
          <input type="hidden" id="addressId" name="addressId" value="" /> <!-- For editing, hidden input to hold address ID -->

          <div class="mb-2">
            <div class="radio-group">
              <label>Type of Address<span class="required-star">*</span></label><br>
              <input type="radio" id="home" name="type" value="Home" required checked>
              <label for="home" class="radio-label">
                <i class="fas fa-home"></i> Home
              </label>

              <input type="radio" id="work" name="type" value="Work" required>
              <label for="work" class="radio-label">
                <i class="fas fa-building"></i> Work
              </label>
            </div>
            <div id="addressTypeError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="fName">First Name<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="fName" name="fName" placeholder=" " data-required="true"/>
            <div id="fNameError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="lName">Last Name<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="lName" name="lName" placeholder=" " data-required="true"/>
            <div id="lNameError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="contactNo">Contact Number<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="contactNo" name="contactNo" placeholder=" " data-required="true"/>
            <div id="contactNoError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="houseName">House Name, Flat No, Building<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="houseName" name="houseName" placeholder=" " data-required="true"/>
            <div id="houseNameError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="area">Area, Street, Village<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="area" name="area" placeholder=" " data-required="true"/>
            <div id="areaError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="landmark">Landmark</label>
            <input type="text" class="form-control" id="landmark" name="landmark" placeholder=" "/>
          </div>

          <div class="mb-2 position-relative">
            <label for="postcode">Postcode<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="postcode" name="postcode" placeholder=" " data-required="true"/>
            <div id="postcodeError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="city">City<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="city" name="city" placeholder=" " data-required="true"/>
            <div id="cityError" class="error-message"></div>
          </div>

          <div class="mb-2 position-relative">
            <label for="state">State<span class="required-star">*</span></label>
            <input type="text" class="form-control" id="state" name="state" placeholder=" " data-required="true"/>
            <div id="stateError" class="error-message"></div>
          </div>

          <div class="form-check">
            <input type="checkbox" class="form-check-input" id="isDefault" name="isDefault" />
            <label class="form-check-label" for="isActive">Use this as my default address</label>
          </div>
        </form>
      </div>
      <div class="modal-footer justify-content-start">
        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-dark" onclick="submitForm()">Submit</button>
      </div>
    </div>
  </div>
</div>


<!-- Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this address?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" onclick="submitDeleteForm()">Delete</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById("addressForm").addEventListener("submit", function (event) {
    // Prevent form submission for validation
    event.preventDefault();

    // Clear previous error messages
    document.querySelectorAll(".error-message").forEach(function (el) {
        el.textContent = "";
    });
    document.querySelectorAll(".is-invalid").forEach(function (el) {
        el.classList.remove("is-invalid");
    });

    // Perform validation checks
    let isValid = true;

    // Validate radio buttons (address type)
    const addressType = document.querySelector('input[name="type"]:checked');
    if (!addressType) {
        isValid = false;
        document.getElementById("addressTypeError").textContent = "Please select an address type.";
    }

    // Validate required text fields
    const requiredFields = document.querySelectorAll('[data-required="true"]');
    requiredFields.forEach(function (field) {
        if (field.value.trim() === "") {
            isValid = false;
            field.classList.add("is-invalid");
            document.getElementById(field.id + "Error").textContent = "This field is required.";
        }
    });

    const contactNoField = document.getElementById("contactNo");
    const contactNoValue = contactNoField.value.trim();
    const contactNoPattern = /^[0-9]{10}$/;
    if (!contactNoPattern.test(contactNoValue)) {
        isValid = false;
        contactNoField.classList.add("is-invalid");
        document.getElementById("contactNoError").textContent = "Please enter a valid contact number.";
    }

    const postcodeField = document.getElementById("postcode");
    const postcodeValue = postcodeField.value.trim();
    const postcodePattern = /^[0-9]{6}$/;
    if (!postcodePattern.test(postcodeValue)) {
        isValid = false;
        postcodeField.classList.add("is-invalid");
        document.getElementById("postcodeError").textContent = "Please enter a valid postcode.";
    }

    if (isValid) {
        event.target.submit();
    }
});

function submitForm() {
    document.getElementById('addressForm').dispatchEvent(new Event('submit'));
}


function openAddressModal(mode, address = null) {
  const modalLabel = document.getElementById('addressModalLabel');
  const addressForm = document.getElementById('addressForm');
  const addressIdInput = document.getElementById('addressId');
  
  // Reset the form for both Add and Edit actions
  addressForm.reset();
  addressIdInput.value = "";

  if (mode === 'edit' && address) {

    modalLabel.innerHTML = '<strong>Edit Address</strong>';
    addressForm.action = '/protected/edit-address';

    document.getElementById('fName').value = address.fName;
    document.getElementById('lName').value = address.lName;
    document.getElementById('contactNo').value = address.contactNo;
    document.getElementById('houseName').value = address.houseName;
    document.getElementById('area').value = address.area;
    document.getElementById('landmark').value = address.landmark;
    document.getElementById('postcode').value = address.postcode;
    document.getElementById('city').value = address.city;
    document.getElementById('state').value = address.state;

    if (address.type === 'Home') {
      document.getElementById('home').checked = true;
    } else {
      document.getElementById('work').checked = true;
    }

    document.getElementById('isDefault').checked = address.isDefault;

    addressIdInput.value = address._id;
  } else {
    modalLabel.innerHTML = '<strong>Add New Address</strong>';
    addressForm.action = '/protected/add-new-address'; 
  }
  const addressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));
  addressModal.show();
}

  </script>

<script>
  let addressIdToDelete = null;

  function setAddressId(addressId) {
    console.log(addressId);
    
    addressIdToDelete = addressId;
  }

  function submitDeleteForm() {
    if (addressIdToDelete) {
      document.getElementById(`deleteAddressForm_${addressIdToDelete}`).submit();
    }
  }

  document.getElementById('checkoutBtn').addEventListener('click', async () => {
  const selectedAddressRadio = document.querySelector('input[name="selectedAddress"]:checked');
  
  if (!selectedAddressRadio) {
    return createToast('Please select an address', 'error');
  }
  
  const selectedAddressId = selectedAddressRadio.value;
  
  // Retrieve the coupon code entered by the user
  const couponCode = document.getElementById('discount-code').value.trim();

  const response = await fetch('/protected/to-next', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
    selectedAddressId,
    couponCode }),
  });

  if (response.ok) {
    window.location.href = '/protected/checkout/payment';
  } else {
    createToast('Error proceeding to payment. Please try again.', 'error');
  }
});


const applyDiscountButton = document.getElementById('applyDiscount');
const discount = document.getElementById('discount');

if (discount.textContent === '₹0.00') {
  applyDiscountButton.textContent = 'Apply';
} else {
  applyDiscountButton.textContent = 'Remove'
  document.getElementById('discount-code').value = '<%= couponCode %>';
}

applyDiscountButton.addEventListener('click', async () => {
  const discountCode = document.getElementById('discount-code').value;
  const subtotalAmount = document.getElementById('subtotalAmount').textContent.replace('₹', '').trim();

  // If the button is in "Remove" mode, trigger coupon removal
  if (applyDiscountButton.textContent === 'Remove') {
    try {
      // Fetch request to remove the applied coupon
      const response = await fetch('/protected/remove-coupon', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest',
        },
        body: JSON.stringify({ subtotal: parseFloat(subtotalAmount) }),
      });

      const result = await response.json();

      if (result.success) {
        // Reset the coupon fields and revert the button back to "Apply"
        document.getElementById('discount').textContent = '₹0.00';
        document.getElementById('grandTotal').textContent = `₹${result.cartSummary.grandTotal.toFixed(2)}`;
        applyDiscountButton.textContent = 'Apply';
        document.getElementById('discount-code').value = '';
        createToast('Coupon removed successfully!', 'success');
      } else {
        createToast(result.message || 'Failed to remove coupon.', 'error');
      }
    } catch (error) {
      console.error('Error removing coupon:', error);
      createToast('Error removing coupon. Please try again.', 'error');
    }
  } else {
    // Apply coupon logic when button text is "Apply"
    if (!discountCode) {
      return createToast('Please enter a discount code.', 'error');
    }

    try {
      // Send the discount code and subtotal to the backend for validation
      const response = await fetch('/protected/apply-coupon', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest',
        },
        body: JSON.stringify({
          couponCode: discountCode,
          subtotal: parseFloat(subtotalAmount),
        }),
      });

      const result = await response.json();

      if (result.success) {
        // Update discount and grand total values
        document.getElementById('discount').textContent = `₹${result.cartSummary.couponDiscount.toFixed(2)}`;
        document.getElementById('grandTotal').textContent = `₹${result.cartSummary.grandTotal.toFixed(2)}`;
        
        // Change button to "Remove"
        applyDiscountButton.textContent = 'Remove';
        createToast('Coupon applied successfully!', 'success');
      } else {
      createToast(result.message || 'Failed to apply coupon.', 'error');
      }
    } catch (error) {
      console.error('Error applying coupon:', error);
      createToast('Error applying coupon. Please try again.', 'error');
    }
  }
});

</script>


<%- include('../partials/footer') %>
